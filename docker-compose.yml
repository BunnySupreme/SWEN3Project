version: '3.8'

services:
  # # Database
  # postgres:
  #   image: postgres:15
  #   container_name: paperless-postgres
  #   environment:
  #     POSTGRES_DB: paperless
  #     POSTGRES_USER: paperless
  #     POSTGRES_PASSWORD: paperlesspassword
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - paperless-network
  #   restart: unless-stopped

  # # Message Broker
  # rabbitmq:
  #   image: rabbitmq:3-management
  #   container_name: paperless-rabbitmq
  #   environment:
  #     RABBITMQ_DEFAULT_USER: paperless
  #     RABBITMQ_DEFAULT_PASS: paperlesspassword
  #   ports:
  #     - "5672:5672"   # AMQP protocol
  #     - "15672:15672" # Management console (corrected from 9093)
  #   volumes:
  #     - rabbitmq_data:/var/lib/rabbitmq
  #   networks:
  #     - paperless-network
  #   restart: unless-stopped

  # # Object Storage
  # minio:
  #   image: minio/minio
  #   container_name: paperless-minio
  #   environment:
  #     MINIO_ROOT_USER: paperless
  #     MINIO_ROOT_PASSWORD: paperlesspassword
  #   ports:
  #     - "9000:9000" # API
  #     - "9001:9001" # Console (corrected from 9090)
  #   command: server /data --console-address ":9001"
  #   volumes:
  #     - minio_data:/data
  #   networks:
  #     - paperless-network
  #   restart: unless-stopped

  # # Search Engine
  # elasticsearch:
  #   image: elasticsearch:8.11.0
  #   container_name: paperless-elasticsearch
  #   environment:
  #     - discovery.type=single-node
  #     - xpack.security.enabled=false
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   ports:
  #     - "9200:9200"
  #   volumes:
  #     - elasticsearch_data:/usr/share/elasticsearch/data
  #   networks:
  #     - paperless-network
  #   restart: unless-stopped

  # # Database Management
  # adminer:
  #   image: adminer
  #   container_name: paperless-adminer
  #   ports:
  #     - "9091:8080"
  #   environment:
  #     ADMINER_DEFAULT_SERVER: postgres
  #   networks:
  #     - paperless-network
  #   restart: unless-stopped

  # .NET Services
  paperless-webui:
    build:
      context: ./PaperlessWebUI
      dockerfile: Dockerfile
    container_name: paperless-webui
    ports:
      - "80:80"
      - "443:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      # - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=paperless;Username=paperless;Password=paperlesspassword
      # - RabbitMQ__Host=rabbitmq
      # - RabbitMQ__Username=paperless
      # - RabbitMQ__Password=paperlesspassword
      # - Elasticsearch__Url=http://elasticsearch:9200
      # - MinIO__Endpoint=minio:9000
      # - MinIO__AccessKey=paperless
      # - MinIO__SecretKey=paperlesspassword
    # depends_on:
    #   - postgres
    #   - rabbitmq
    #   - elasticsearch
    #   - minio
    networks:
      - paperless-network
    restart: unless-stopped

  # paperless-services:
  #   build:
  #     context: ./PaperlessServices
  #     dockerfile: Dockerfile
  #   container_name: paperless-services
  #   ports:
  #     - "8082:8080"
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Production
  #     - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=paperless;Username=paperless;Password=paperlesspassword
  #     - RabbitMQ__Host=rabbitmq
  #     - RabbitMQ__Username=paperless
  #     - RabbitMQ__Password=paperlesspassword
  #     - Elasticsearch__Url=http://elasticsearch:9200
  #     - MinIO__Endpoint=minio:9000
  #     - MinIO__AccessKey=paperless
  #     - MinIO__SecretKey=paperlesspassword
  #   depends_on:
  #     - postgres
  #     - rabbitmq
  #     - elasticsearch
  #     - minio
  #   networks:
  #     - paperless-network
  #   restart: unless-stopped

  # peri-worker:
  #   build:
  #     context: ./PeriWorker
  #     dockerfile: Dockerfile
  #   container_name: peri-worker
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Production
  #     - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=paperless;Username=paperless;Password=paperlesspassword
  #     - RabbitMQ__Host=rabbitmq
  #     - RabbitMQ__Username=paperless
  #     - RabbitMQ__Password=paperlesspassword
  #     - Gemini__ApiKey=${GEMINI_API_KEY:-}
  #     - Elasticsearch__Url=http://elasticsearch:9200
  #     - MinIO__Endpoint=minio:9000
  #     - MinIO__AccessKey=paperless
  #     - MinIO__SecretKey=paperlesspassword
  #   depends_on:
  #     - postgres
  #     - rabbitmq
  #     - elasticsearch
  #     - minio
  #   networks:
  #     - paperless-network
  #   restart: unless-stopped

# volumes:
#   postgres_data:
#   rabbitmq_data:
#   minio_data:
#   elasticsearch_data:

networks:
  paperless-network:
    driver: bridge